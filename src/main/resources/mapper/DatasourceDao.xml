<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.cboard.dao.DatasourceDao">

    <select id="getDatasourceConfig" resultType="java.lang.String">
        <![CDATA[
        SELECT config FROM dashboard_datasource WHERE datasource_id = #{0}
        ]]>
    </select>

    <select id="getDatasourceList" resultType="org.cboard.pojo.DashboardDatasource">
      SELECT
              datasource_id AS id,
              s.user_id     AS userId,
              source_name   AS name,
              source_type   AS type,
              config        AS config,
              u.user_name   AS userName,
              u.login_name  AS loginName,
              create_time   AS createTime,
              update_time   AS updateTime
         FROM dashboard_datasource s
         LEFT JOIN dashboard_user u ON u.user_id = s.user_id
        WHERE #{0} = '${admin_user_id}' OR s.user_id = #{0} OR datasource_id IN (
             SELECT res_id
               FROM dashboard_user_role ur
               LEFT JOIN dashboard_role_res rr ON ur.role_id = rr.role_id
              WHERE ur.user_id = #{0} AND rr.res_type = 'datasource'
          )
        ORDER BY source_name
    </select>

    <select id="getDatasourceListAdmin" resultType="org.cboard.pojo.DashboardDatasource">
        SELECT
               datasource_id AS id,
               s.user_id     AS userId,
               source_name   AS name,
               source_type   AS type,
               config        AS config,
               u.user_name   AS userName,
               u.login_name  AS loginName,
               create_time   AS createTime,
               update_time   AS updateTime
         FROM dashboard_datasource s
         LEFT JOIN dashboard_user u ON u.user_id = s.user_id
        WHERE #{0} = '${admin_user_id}'
          OR s.user_id = #{0}
          OR datasource_id IN (
              SELECT res_id
                FROM dashboard_role r
                LEFT JOIN dashboard_role_res rr ON r.role_id = rr.role_id
               WHERE r.user_id = #{0} AND rr.res_type = 'datasource'
        )
        ORDER BY source_name
    </select>

    <select id="getDatasource" resultType="org.cboard.pojo.DashboardDatasource">
        SELECT datasource_id id,user_id userId,source_name name,source_type type ,config,create_time createTime,update_time updateTime FROM dashboard_datasource WHERE datasource_id = #{0}
    </select>

    <insert id="save" parameterType="org.cboard.pojo.DashboardDatasource">
        <![CDATA[
        INSERT INTO dashboard_datasource(user_id,source_name,source_type,config) VALUES (#{userId},#{name},#{type},#{config})
        ]]>
    </insert>

    <update id="update" parameterType="org.cboard.pojo.DashboardDatasource">
        <![CDATA[
        UPDATE dashboard_datasource SET source_name = #{name},config = #{config},update_time = #{updateTime} where datasource_id = #{id}
        ]]>
    </update>

    <select id="countExistDatasourceName" resultType="java.lang.Long">
        SELECT count(1) from dashboard_datasource where 1=1
        <if test="datasource_id != null" >
        <![CDATA[
            and datasource_id <> #{datasource_id}
            ]]>
        </if>
          and source_name = #{source_name}
    </select>

    <delete id="delete">
        DELETE FROM dashboard_datasource WHERE datasource_id = #{0}
    </delete>

    <select id="checkDatasourceRole" resultType="java.lang.Long">
        SELECT count(1) FROM dashboard_datasource WHERE datasource_id = #{1} and (#{0} = '${admin_user_id}' OR user_id = #{0} OR datasource_id IN (SELECT res_id FROM dashboard_user_role ur LEFT JOIN dashboard_role_res rr ON ur.role_id = rr.role_id WHERE ur.user_id = #{0} AND rr.res_type = 'datasource' AND rr.permission LIKE #{2}))
    </select>
</mapper>